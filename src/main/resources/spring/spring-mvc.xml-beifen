<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<!-- 
	<import resource="classpath*:/spring/job.xml" />
 	-->
	<context:component-scan base-package="com.xiaoyu.lingdian.*" />

	<!-- 自定义日期转换 -->
	<bean id="jbhDateConverter"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.xiaoyu.lingdian.core.spring.converter.JbhDateConverter"></bean>
			</set>
		</property>
	</bean>
	
	<!-- 消息转换配置 -->
	<mvc:annotation-driven conversion-service="jbhDateConverter">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!--json日期格式化默认设置 -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:interceptors>       
        <mvc:interceptor>      
	       <mvc:mapping path="/*/**" />  
	       <bean class="com.xiaoyu.lingdian.interceptor.BasePropertiesInterceptor"/>      
	    </mvc:interceptor> 
    </mvc:interceptors>
    
	<!-- 配置SpringMVC的视图解析器 -->
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/tpl/"></property>
		<property name="velocityProperties">
			<props>
				<!-- <prop key="directive.foreach.counter.name">loopCounter</prop>    
            	<prop key="directive.foreach.counter.initial.value">0</prop> -->  
				<prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->
				<prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
			</props>
		</property>
	</bean>

	<!--视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="false"></property>
		<property name="prefix" value=""></property><!-- 视图文件的前缀，即存放的路径 --> 
		<property name="suffix" value=".html" />
		<!--<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" /><!–toolbox配置文件路径–>-->
		<property name="dateToolAttribute" value="dateTool" /><!--日期函数名称-->
		<property name="numberToolAttribute" value="numberTool" /><!--数字函数名称-->
		<!-- 此变量值为pageContext.request, 页面使用方法：request.contextPath -->
		<property name="requestContextAttribute" value="rc" />
		<property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->  
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
	</bean>
	
	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<!-- 
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/views/" />
		<property name="suffix" value=".html" />
	</bean>
                
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:/global/messages" />
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="fileEncodings" value="utf-8" />
		<property name="cacheSeconds" value="120" />
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="useDefaultSuffixPattern" value="false" />
	</bean>
	-->
	<!-- 
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
 	-->
 	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="52428800" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException --> 
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 --> 
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
	    <property name="exceptionMappings"> 
	        <props> 
	            <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/page/error.jsp --> 
	            <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop> 
	        </props> 
	    </property> 
	</bean>

	<!-- <mvc:annotation-driven validator="validator" /> -->

	<mvc:default-servlet-handler />
	<!-- 如果当前路径是/ 则交给相应的视图解析器直接解析为视图WEB-INF/tpl/index.html  -->
	<mvc:view-controller path="/" view-name="/index" />
	
	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/static/**" location="/,/static/" />
	
</beans>